
include(CheckIncludeFile)
include(CheckIncludeFileCXX)
include(CheckSymbolExists)
include(CheckCXXSymbolExists)
include(ProcessorCount)
include(CheckTypeSize)

# Generic routine to set appropriate cores for all tests.
# Typically the tests are executed with maximum 2 cores.
cmake_host_system_information(RESULT Ncpu QUERY NUMBER_OF_PHYSICAL_CORES)
if(Ncpu LESS 2)
  ProcessorCount(n)
  if(n GREATER Ncpu)
    set(Ncpu ${n})
  endif()
  set(MPIEXEC_NUMPROC_MAX 1)
else()
  set(MPIEXEC_NUMPROC_MAX 2)
endif()

# Reset paths to ensure it does interfere with checks.
set(CMAKE_REQUIRED_INCLUDES)
set(CMAKE_REQUIRED_LIBRARIES)

message(STATUS "")
message(STATUS "****************************************************")
message(STATUS "              Checking for data types               ")
message(STATUS "****************************************************")

check_type_size(void* SIZEOF_VOIDPTR)
message(STATUS "Size of void* - ${SIZEOF_VOIDPTR} bytes.")
check_type_size(int SIZEOF_INT)
message(STATUS "Size of int - ${SIZEOF_INT} bytes.")
check_type_size(int* SIZEOF_INTPTR)
message(STATUS "Size of int* - ${SIZEOF_INTPTR} bytes.")
check_type_size(char SIZEOF_CHAR)
message(STATUS "Size of char - ${SIZEOF_CHAR} bytes.")
check_type_size(char* SIZEOF_CHARPTR)
message(STATUS "Size of char* - ${SIZEOF_CHARPTR} bytes.")
check_type_size(size_t SIZEOF_SIZE_T)
message(STATUS "Size of size_t - ${SIZEOF_SIZE_T} bytes.")
check_type_size(int32_t SIZEOF_INT32_T)
message(STATUS "Size of int32_t - ${SIZEOF_INT32_T} bytes.")
check_type_size(int64_t SIZEOF_INT64_T)
message(STATUS "Size of int64_t - ${SIZEOF_INT64_T} bytes.")
check_type_size(uint32_t SIZEOF_UINT32_T)
message(STATUS "Size of uint32_t - ${SIZEOF_UINT32_T} bytes.")
check_type_size(uint64_t SIZEOF_UINT64_T)
message(STATUS "Size of uint64_t - ${SIZEOF_UINT64_T} bytes.")
check_type_size(long SIZEOF_LONG)
message(STATUS "Size of long - ${SIZEOF_LONG} bytes.")
check_type_size("long long" SIZEOF_LONG_LONG)
message(STATUS "Size of long long - ${SIZEOF_LONG_LONG} bytes.")
check_type_size(float SIZEOF_FLOAT)
message(STATUS "Size of float - ${SIZEOF_FLOAT} bytes.")
check_type_size(double SIZEOF_DOUBLE)
message(STATUS "Size of double - ${SIZEOF_DOUBLE} bytes.")

message(STATUS "")
message(STATUS "****************************************************")
message(STATUS "               Checking for headers                 ")
message(STATUS "****************************************************")

if(${MPI_FOUND})
  set(CMAKE_REQUIRED_LIBRARIES MPI::MPI_CXX)
  check_include_file(mpi.h HAVE_MPI_H)
endif()

if(${Python3_FOUND})
  set(CMAKE_REQUIRED_INCLUDES ${Python3_INCLUDE_DIRS})
  set(CMAKE_REQUIRED_LIBRARIES ${Python3_LIBRARIES})
  check_include_file(Python.h HAVE_PYTHON_H)
endif()

if(${OpenBLAS_FOUND})
  set(CMAKE_REQUIRED_INCLUDES ${OpenBLAS_INCLUDE_DIRS})
  set(CMAKE_REQUIRED_LIBRARIES ${OpenBLAS_LIBRARIES})
  check_include_file(lapacke.h HAVE_LAPACKE_H)
  check_include_file(lapack.h HAVE_LAPACK_H)
  check_include_file(cblas.h HAVE_BLAS_H)
endif()

if(${PETSC_FOUND})
  set(CMAKE_REQUIRED_INCLUDES ${PETSC_INCLUDE_DIRS})
  set(CMAKE_REQUIRED_LIBRARIES ${PETSC_LINK_LIBRARIES})
  check_include_file(petscsystypes.h HAVE_PETSC)
endif()

if(${precice_FOUND})
  set(CMAKE_REQUIRED_LIBRARIES precice::precice)
  check_include_file_cxx(SolverInterface.hpp HAVE_PRECICE)
endif()

# Reset paths to ensure it does interfere with checks.
set(CMAKE_REQUIRED_INCLUDES)
set(CMAKE_REQUIRED_LIBRARIES)

set(NESTED_MAT 0)
set(XBRAID 0)
set(SIMD 0)
set(NDEBUG 0)
set(PAT 0)
set(EXTRAE 0)
set(CHASTE 0)
set(OPENCOR 0)
set(MEGAMOL 0)
