# SConstruct file for a single example.
#
# Usage: `scons BUILD_TYPE=debug` will build debug version, `scons` will build release version.

# Call the generic `SConstructGeneral` script that will configure everything. It is located at the top level directory of opendihu.
# That script will then call a `SConscript` file that defines which sources to use.

import os

# get the directory where opendihu is installed (the top level directory of opendihu)
opendihu_home = os.environ.get('OPENDIHU_HOME') or "../.."

# set path where the "SConscript" file is located (set to current path)
path_where_to_call_sconscript = Dir('.').srcnode().abspath

# call general SConstruct that will configure everything and then call SConscript at the given path
#SConscript(os.path.join(opendihu_home,'SConstructGeneral'), 
#           exports={"path": path_where_to_call_sconscript})

env = Environment(tools = ['default'], toolpath = ['config/tools'],  ENV = os.environ)

# add basic linker flags
ldflags = "-lpthread -ldl -lutil -lm"
env.MergeFlags(ldflags)
           
env["BUILD_TYPE"] = "debug"

if env["BUILD_TYPE"] == "debug":
  
  # debug build
  variant_dir = os.path.join(path_where_to_call_sconscript,"build_debug")           # folder of build
  env.MergeFlags('-DDEBUG -ggdb3 -g3 -Og -fopenmp -std=c++14 -Werror -Wunused-variable -DELPP_FEATURE_CRASH_LOG -ftemplate-backtrace-limit=0')   # gcc flags, will be sorted automatically into linker and compiler flags
  
  
else:
  # release build
  variant_dir = os.path.join(path_where_to_call_sconscript,'build_release')         # folder of build
  env.MergeFlags('-O2 -march=native -fopenmp -std=c++14 -Wunused-variable -DELPP_DISABLE_DEBUG_LOGS -DELPP_DISABLE_VERBOSE_LOGS -DELPP_DISABLE_TRACE_LOGS')   # gcc flags, will be sorted automatically into linker and compiler flags

env.MergeFlags('-Wunused-variable')

# call SConscript file for the actual build in the specified build directory variant_dir
SConscript(dirs=".",
           variant_dir=variant_dir,
           duplicate=False,
           exports="env")
