# isotropic Mooney Rivlin
import numpy as np
import sys, os

# Fixed units in CellML models:
# These define the unit system.
# 1 cm = 1e-2 m
# 1 ms = 1e-3 s
# 1 uA = 1e-6 A
# 1 uF = 1e-6 F

# Fixed units in mechanics system
# 1 cm = 1e-2 m
# 1 ms = 1e-3 s
# 1 N
# 1 N/cm^2 = (kg*m*s^-2) / (1e-2 m)^2 = 1e4 kg*m^-1*s^-2 = 10 kPa
# (kg = N*s^2*m^-1) => N*ms^2*cm^-1 = N*(1e-3 s)^2 * (1e-2 m)^-1 = 1e-4 N*s^2*m^-1 = 1e-4 kg
# (kg/m^3) => 1 * 1e-4 kg * (1e-2 m)^-3 = 1e2 kg/m^3
# (m/s^2) => 1 cm/ms^2 = 1e-2 m * (1e-3 s)^-2 = 1e4 m*s^-2

# number of elements
nx = 2    # 2
ny = 2    # 2
nz = 5    # 5

# material parameters
# --------------------
# quantities in CellML unit system
sigma_f = 8.93              # [mS/cm] conductivity in fiber direction (f)
sigma_f = 3.828             # [mS/cm] conductivity in fiber direction (f)
sigma_xf = 0                # [mS/cm] conductivity in cross-fiber direction (xf)
sigma_e_f = 6.7             # [mS/cm] conductivity in extracellular space, fiber direction (f)
sigma_e_xf = 3.35           # [mS/cm] conductivity in extracellular space, cross-fiber direction (xf) / transverse

Conductivity = sigma_f      # [mS/cm] sigma, conductivity
Am = 500.0                  # [cm^-1] surface area to volume ratio
Cm = 0.58                   # [uF/cm^2] membrane capacitance, (1 = fast twitch, 0.58 = slow twitch)
# diffusion prefactor = Conductivity/(Am*Cm)

# quantities in mechanics unit system
rho = 10                    # [1e-4 kg/cm^3] density of the muscle (density of water)

# Mooney-Rivlin parameters [c1,c2,b,d] of c1*(Ibar1 - 3) + c2*(Ibar2 - 3) + b/d (λ - 1) - b*ln(λ)
# Heidlauf13: [6.352e-10 kPa, 3.627 kPa, 2.756e-5 kPa, 43.373] = [6.352e-11 N/cm^2, 3.627e-1 N/cm^2, 2.756e-6 N/cm^2, 43.373], pmax = 73 kPa = 7.3 N/cm^2
# Heidlauf16: [3.176e-10 N/cm^2, 1.813 N/cm^2, 1.075e-2 N/cm^2, 9.1733], pmax = 7.3 N/cm^2

c1 = 3.176e-10              # [N/cm^2]
c2 = 1.813                  # [N/cm^2]
b  = 1.075e-2               # [N/cm^2] anisotropy parameter
d  = 9.1733                 # [-] anisotropy parameter
material_parameters = [c1, c2, b, d]   # material parameters
pmax = 7.3                  # [N/cm^2] maximum isometric active stress

constant_body_force = (0,0,-9.81e-4)   # [cm/ms^2], gravity constant for the body force
#constant_body_force = (0,0,0)
bottom_traction = [0.0,0.0,-1e-1]        # [1 N]
#bottom_traction = [0.0,0.0,0.0]        # [1 N]


# boundary conditions (for quadratic elements)
dirichlet_bc = {}

n_points_3D_mesh_quadratic_global_x = 2*nx + 1
n_points_3D_mesh_quadratic_global_y = 2*ny + 1
n_points_3D_mesh_quadratic_global_z = 2*nz + 1

# set Dirichlet BC at top nodes for linear elasticity problem, fix muscle at top
elasticity_dirichlet_bc = {}
for i in range(n_points_3D_mesh_quadratic_global_x*n_points_3D_mesh_quadratic_global_y):
  elasticity_dirichlet_bc[(n_points_3D_mesh_quadratic_global_z-1)*n_points_3D_mesh_quadratic_global_x*n_points_3D_mesh_quadratic_global_y + i] = 0.0
    
# Neumann BC at bottom nodes, traction downwards
elasticity_neumann_bc = [{"element": 0*nx*ny + j*nx + i, "constantVector": bottom_traction, "face": "2-"} for j in range(ny) for i in range(nx)]

# Neumann boundary conditions, specify upward force for top elements, slightly in y-direction
#neumann_bc = [{"element": (nz-1)*nx*ny + j*nx + i, "constantVector": bottom_traction, "face": "2+"} for j in range(ny) for i in range(nx)]

dt = 3e-2         # [ms] time step width
dt = 3e0
end_time = 10000
output_interval = dt

#dirichlet_bc = {}
#neumann_bc = []

# node positions in cm for 2,2,3 nodes
#node_positions = [[79.88196548528718, 138.44230490662775, 72.0], [84.1096260871754, 138.31655743349813, 72.0], [88.33728668906363, 138.19080996036848, 72.0], [89.598002133421, 139.96951371685657, 72.0], [90.85871757777839, 141.74821747334462, 72.0], [76.10149783100812, 143.16321149777914, 72.0], [80.27591827937458, 143.9465554749207, 72.0], [84.45033872774106, 144.72989945206223, 72.0], [86.5697220643283, 145.8000948322888, 72.0], [88.68910540091555, 146.87029021251539, 72.0], [72.32103017672904, 147.88411808893053, 72.0], [76.44221047157376, 149.57655351634324, 72.0], [80.56339076641848, 151.26898894375594, 72.0], [83.5414419952356, 151.63067594772104, 72.0], [86.51949322405271, 151.99236295168615, 72.0], [71.23271784225128, 150.78925110166716, 72.0], [74.85866336055606, 152.6577237501053, 72.0], [78.48460887886085, 154.52619639854342, 72.0], [81.43059188883157, 154.50720050492959, 72.0], [84.37657489880226, 154.48820461131572, 72.0], [70.1444055077735, 153.6943841144038, 72.0], [73.27511624953837, 155.73889398386734, 72.0], [76.40582699130324, 157.7834038533309, 72.0], [79.31974178242754, 157.38372506213807, 72.0], [82.23365657355183, 156.98404627094527, 72.0], [80.84363734642932, 136.53655485714376, 97.01690331304937], [86.73556883901792, 136.53695725848277, 97.01690331304937], [92.62750033160651, 136.5373596598218, 97.01690331304937], [94.55139199406882, 139.28174878330836, 97.01690331304937], [96.47528365653113, 142.02613790679493, 97.01690331304937], [74.78524747100565, 143.85646972154393, 97.01690331304937], [80.90002885669234, 144.9965358079074, 97.01690331304935], [87.01481024237904, 146.13660189427088, 97.01690331304937], [90.15936401210571, 147.9277813177691, 97.01690331304935], [93.30391778183241, 149.7189607412673, 97.01690331304937], [68.72685759558195, 151.17638458594408, 97.01690331304937], [75.06448887436676, 153.456114357332, 97.01690331304937], [81.40212015315156, 155.73584412871992, 97.01690331304937], [85.76733603014262, 156.57381385222982, 97.01690331304937], [90.13255190713367, 157.4117835757397, 97.01690331304937], [66.63137423780316, 155.5051701182433, 97.01690331304937], [72.57124988131899, 158.16285605471842, 97.01690331304935], [78.51112552483482, 160.8205419911935, 97.01690331304937], [82.84569431214274, 160.88758200727403, 97.01690331304935], [87.18026309945067, 160.95462202335457, 97.01690331304937], [64.53589088002435, 159.83395565054255, 97.01690331304937], [70.07801088827122, 162.8695977521048, 97.01690331304937], [75.6201308965181, 165.90523985366704, 97.01690331304937], [79.92405259414289, 165.20135016231825, 97.01690331304937], [84.22797429176767, 164.49746047096946, 97.01690331304937], [81.80530920757147, 134.63080480765976, 122.03380662609872], [89.36151159086043, 134.75735708346744, 122.03380662609872], [96.91771397414941, 134.88390935927512, 122.03380662609872], [99.50478185471664, 138.59398384976015, 122.03380662609872], [102.09184973528387, 142.3040583402452, 122.03380662609872], [73.46899711100318, 144.5497279453087, 122.03380662609872], [81.5241394340101, 146.04651614089408, 122.03380662609872], [89.57928175701701, 147.54330433647954, 122.03380662609872], [93.74900595988315, 150.05546780324937, 122.03380662609872], [97.91873016274926, 152.5676312700192, 122.03380662609872], [65.13268501443487, 154.46865108295762, 122.03380662609872], [73.68676727715976, 157.33567519832076, 122.03380662609872], [82.24084953988464, 160.20269931368392, 122.03380662609872], [87.99323006504963, 161.5169517567386, 122.03380662609872], [93.74561059021464, 162.83120419979323, 122.03380662609872], [62.03003063335504, 160.22108913481947, 122.03380662609872], [70.28383640208193, 163.6679883593315, 122.03380662609872], [78.5376421708088, 167.11488758384354, 122.03380662609872], [84.26079673545394, 167.2679635096185, 122.03380662609872], [89.98395130009908, 167.42103943539342, 122.03380662609872], [58.92737625227521, 165.9735271866813, 122.03380662609872], [66.88090552700407, 170.00030152034225, 122.03380662609872], [74.83443480173295, 174.0270758540032, 122.03380662609872], [80.52836340585823, 173.01897526249843, 122.03380662609872], [86.2222920099835, 172.01087467099364, 122.03380662609872], [81.37354014493069, 141.79567982331662, 147.05070993914808], [89.40590509478392, 141.9231018606853, 147.05070993914808], [97.43827004463714, 142.05052389805402, 147.05070993914808], [99.74245928673088, 145.98862102408094, 147.05070993914808], [102.04664852882463, 149.92671815010786, 147.05070993914808], [72.98931071812208, 151.536997634973, 147.05070993914808], [81.56829622615707, 153.29668067855795, 147.05070993914805], [90.14728173419206, 155.05636372214286, 147.05070993914808], [94.24073708709727, 157.85647235139828, 147.05070993914805], [98.33419244000247, 160.6565809806537, 147.05070993914808], [64.60508129131347, 161.2783154466294, 147.05070993914808], [73.73068735753023, 164.67025949643056, 147.05070993914808], [82.856293423747, 168.06220354623173, 147.05070993914808], [88.73901488746365, 169.72432367871562, 147.05070993914808], [94.62173635118032, 171.3864438111995, 147.05070993914808], [61.74810805854179, 166.92530483169884, 147.05070993914808], [70.65408215617077, 171.07873743206488, 147.05070993914808], [79.56005625379973, 175.23217003243093, 147.05070993914808], [85.37074274276061, 175.71304511796703, 147.05070993914808], [91.1814292317215, 176.1939202035031, 147.05070993914808], [58.89113482577012, 172.57229421676828, 147.05070993914808], [67.57747695481129, 177.48721536769918, 147.05070993914808], [76.26381908385247, 182.40213651863013, 147.05070993914808], [82.00247059805757, 181.7017665572184, 147.05070993914808], [87.74112211226267, 181.00139659580668, 147.05070993914808], [80.9417710822899, 148.96055483897348, 172.06761325219742], [89.45029859870739, 149.0888466379032, 172.06761325219742], [97.95882611512488, 149.21713843683293, 172.06761325219742], [99.98013671874514, 153.38325819840173, 172.06761325219742], [102.0014473223654, 157.5493779599705, 172.06761325219742], [72.50962432524098, 158.52426732463732, 172.06761325219742], [81.61245301830405, 160.54684521622175, 172.06761325219742], [90.71528171136713, 162.56942310780624, 172.06761325219742], [94.73246821431141, 165.6574768995472, 172.06761325219745], [98.74965471725568, 168.74553069128817, 172.06761325219742], [64.07747756819205, 168.08797981030116, 172.06761325219742], [73.77460743790071, 172.00484379454036, 172.06761325219742], [83.47173730760937, 175.92170777877953, 172.06761325219742], [89.48479970987768, 177.93169560069268, 172.06761325219742], [95.49786211214598, 179.94168342260582, 172.06761325219745], [61.46618548372854, 173.6295205285782, 172.06761325219742], [71.02432791025961, 178.48948650479824, 172.06761325219742], [80.58247033679068, 183.3494524810183, 172.06761325219742], [86.48068875006729, 184.15812672631552, 172.06761325219742], [92.37890716334391, 184.96680097161277, 172.06761325219742], [58.85489339926503, 179.17106124685523, 172.06761325219745], [68.2740483826185, 184.97412921505614, 172.06761325219742], [77.69320336597198, 190.77719718325704, 172.06761325219742], [83.47657779025691, 190.38455785193838, 172.06761325219742], [89.25995221454184, 189.99191852061975, 172.06761325219742], [83.58576782758489, 156.5780271037519, 196.0338066260987], [91.90427231291838, 157.41954937192602, 196.0338066260987], [100.22277679825189, 158.2610716401001, 196.0338066260987], [102.20869054780991, 161.60766324637603, 196.0338066260987], [104.19460429736793, 164.95425485265196, 196.0338066260987], [77.11405531960727, 164.92008447974362, 196.0338066260987], [85.56331247045148, 167.12438193438476, 196.0338066260987], [94.01256962129568, 169.3286793890259, 196.0338066260987], [97.7754830075483, 171.8308042034405, 196.03380662609874], [101.53839639380091, 174.33292901785512, 196.0338066260987], [70.64234281162965, 173.26214185573534, 196.0338066260987], [79.22235262798458, 176.8292144968435, 196.0338066260987], [87.8023624443395, 180.39628713795167, 196.0338066260987], [93.3422754672867, 182.05394516050498, 196.0338066260987], [98.88218849023389, 183.7116031830583, 196.03380662609874], [68.81682990712241, 178.21201297585026, 196.0338066260987], [77.12000478916683, 182.5803103631989, 196.0338066260987], [85.42317967121124, 186.94860775054755, 196.0338066260987], [90.73095357484405, 187.4768208671029, 196.0338066260987], [96.03872747847687, 188.00503398365834, 196.0338066260987], [66.99131700261518, 183.16188409596515, 196.03380662609874], [75.01765695034908, 188.3314062295543, 196.0338066260987], [83.04399689808301, 193.50092836314343, 196.0338066260987], [88.11963168240143, 192.8996965737009, 196.0338066260987], [93.19526646671986, 192.2984647842584, 196.0338066260987], [86.22976457287987, 164.19549936853034, 220.0], [94.35824602712938, 165.75025210594885, 220.0], [102.48672748137888, 167.30500484336733, 220.0], [104.43724437687467, 169.83206829435034, 220.0], [106.38776127237048, 172.35913174533337, 220.0], [81.71848631397356, 171.31590163484992, 220.0], [89.5141719225989, 173.70191865254773, 220.0], [97.30985753122425, 176.08793567024554, 220.0], [100.8184978007852, 178.0041315073338, 220.0], [104.32713807034614, 179.92032734442205, 220.0], [77.20720805506724, 178.4363039011695, 220.0], [84.67009781806843, 181.65358519914665, 220.0], [92.13298758106961, 184.87086649712379, 220.0], [97.1997512246957, 186.17619472031726, 220.0], [102.26651486832179, 187.48152294351073, 220.0], [76.16747433051628, 182.7945054231223, 220.0], [83.21568166807404, 186.67113422159954, 220.0], [90.26388900563182, 190.5477630200768, 220.0], [94.98121839962083, 190.79551500789034, 220.0], [99.69854779360983, 191.0432669957039, 220.0], [75.12774060596531, 187.1527069450751, 220.0], [81.76126551807967, 191.68868324405244, 220.0], [88.39479043019402, 196.2246595430298, 220.0], [92.76268557454594, 195.41483529546343, 220.0], [97.13058071889787, 194.60501104789708, 220.0]]

# artifical node positions
belly_width = 0.02
width = 1.0
height = 1.0

node_positions = [[(x-nx)*(1+(2*nz-z)*z*belly_width)*width,(y-ny)*(1+(2*nz-z)*z*belly_width)*width,z*height] for z in range(2*nz+1) for y in range(2*ny+1) for x in range(2*nx+1)]

config = {
  "scenarioName": "3d_box",
  "solverStructureDiagramFile":     "solver_structure.txt",     # output file of a diagram that shows data connection between solvers
  "Meshes": {
    "3Dmesh_quadratic": {
    'nElements': [nx, ny, nz], 
    'nRanks': [1, 1, 1], 
    'nodePositions': node_positions, 
    'inputMeshIsGlobal': True, 
    'setHermiteDerivatives': False, 
    'logKey': '3Dmesh_quadratic'}
  },
  "DynamicHyperelasticitySolver": {
    #"numberTimeSteps": 1,
    "endTime": end_time,
    "timeStepWidth": dt,    
    "durationLogKey": "nonlinear",
    "timeStepOutputInterval": 1,
    
    #"materialParameters": [1.5,2.0],
    "materialParameters": [c1,c2],
    "density": rho,
    "displacementsScalingFactor": 1.0,   # scaling factor for displacements, set to sth. other than 1 only to increase visual appearance for very small displacements
    "residualNormLogFilename": "log_residual_norm.txt",
    "useAnalyticJacobian": True,
    "useNumericJacobian": False,   # only works with non-nested matrices, if both numeric and analytic are enable, it uses the analytic for the preconditioner and the numeric as normal jacobian
      
    "dumpDenseMatlabVariables": False,   # extra output of matlab vectors, x,r, jacobian matrix, very slow
    # if useAnalyticJacobian,useNumericJacobian and dumpDenseMatlabVariables all all three true, the analytic and numeric jacobian matrices will get compared to see if there are programming errors for the analytic jacobian
    
    # mesh
    "meshName": "3Dmesh_quadratic",
    "inputMeshIsGlobal": True,
    
    # nonlinear solver
    "relativeTolerance": 1e-10,         # 1e-10 relative tolerance of the linear solver
    "solverType": "preonly",            # type of the linear solver: cg groppcg pipecg pipecgrr cgne nash stcg gltr richardson chebyshev gmres tcqmr fcg pipefcg bcgs ibcgs fbcgs fbcgsr bcgsl cgs tfqmr cr pipecr lsqr preonly qcg bicg fgmres pipefgmres minres symmlq lgmres lcd gcr pipegcr pgmres dgmres tsirm cgls
    "preconditionerType": "lu",         # type of the preconditioner
    "maxIterations": 1e4,               # maximum number of iterations in the linear solver
    "snesMaxFunctionEvaluations": 1e8,  # maximum number of function iterations
    "snesMaxIterations": 20,            # maximum number of iterations in the nonlinear solver
    "snesRelativeTolerance": 1e-5,     # relative tolerance of the nonlinear solver
    "snesAbsoluteTolerance": 1e-5,     # absolute tolerance of the nonlinear solver
    
    #"dumpFilename": "out/r{}/m".format(sys.argv[-1]),   # dump system matrix and right hand side after every solve
    "dumpFilename": "",         # dump disabled
    "dumpFormat": "matlab",   # default, ascii, matlab
    
    # boundary and initial conditions
    "dirichletBoundaryConditions": elasticity_dirichlet_bc,
    "neumannBoundaryConditions": elasticity_neumann_bc,
    #"updateDirichletBoundaryConditionsFunction": update_dirichlet_boundary_conditions,
    "updateDirichletBoundaryConditionsFunction": None,
    "updateDirichletBoundaryConditionsFunctionCallInterval": 1,
    
    "initialValuesDisplacements": [],
    #"initialValuesDisplacements": [[0.0,0.0,0.0] for i in range((2*nx+1)*(2*ny+1)*(2*nz+1-1))] + [[1.0,0.0,0.0] for i in range((2*nx+1)*(2*ny+1))],
    #"initialValuesVelocities": [[0.01*z,0.0,0.0] for i in range((2*nx+1)*(2*ny+1)) for z in range((2*nz+1))],
    "constantBodyForce": constant_body_force,     # e.g. for gravity
    
    "OutputWriter" : [   # output files for displacements function space (quadratic elements), contains displacements, velocities and PK2 stresses
      {"format": "Paraview", "outputInterval": 1, "filename": "out/u", "binary": False, "fixedFormat": False, "onlyNodalValues":True, "combineFiles":True},
      #{"format": "PythonCallback", "outputInterval": 1, "callback": postprocess, "onlyNodalValues":True},
    ],
    "pressure": {   # output files for pressure function space (linear elements), contains pressure values, as well as displacements and velocities
      "OutputWriter" : [
        {"format": "Paraview", "outputInterval": 1, "filename": "out/p", "binary": False, "fixedFormat": False, "onlyNodalValues":True, "combineFiles":True},
      ]
    },
    "dynamic": {    # output of the dynamic solver, has additional virtual work values 
      "OutputWriter" : [   # output files for displacements function space (quadratic elements)
        #{"format": "Paraview", "outputInterval": int(output_interval/dt), "filename": "out/dynamic", "binary": False, "fixedFormat": False, "onlyNodalValues":True, "combineFiles":True},
        #{"format": "Paraview", "outputInterval": 1, "filename": "out/dynamic", "binary": False, "fixedFormat": False, "onlyNodalValues":True, "combineFiles":True},
      ],
    }
  }
}
